name: Build, Push to ECR, and Deploy to EKS with Quarkus

on:
  push:
    branches:
      - master

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Generate Image Tag
        id: image-tag
        run: echo "::set-output name=tag::$(date +%Y%m%d%H%M%S)-$(git rev-parse --short HEAD)"

      - name: Build and Push Native Image to Amazon ECR
        env:
          IMAGE_TAG: ${{ steps.image-tag.outputs.tag }}
        run: |
          ./mvnw clean package -Dquarkus.container-image.tag=${IMAGE_TAG}

      # Configurar kubectl para EKS
      - name: Configure kubectl for EKS
        run: aws eks update-kubeconfig --name quarkus --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        env:
          IMAGE_TAG: ${{ steps.image-tag.outputs.tag }}
        run: |
          sed -i "s|quarkus:latest|quarkus:${IMAGE_TAG}|g" target/kubernetes/kubernetes.yml
          kubectl apply -f target/kubernetes/kubernetes.yml
          kubectl expose deployment quarkus-hello-world --type=LoadBalancer --name=quarkus-hello-world-service --port=80 --target-port=8080

      # Despliegue en EKS
      #- name: Deploy to EKS
      #  run: |
      #    kubectl apply -f target/kubernetes/kubernetes.yml
      #    kubectl expose deployment quarkus-hello-world --type=LoadBalancer --name=quarkus-hello-world-service --port=80 --target-port=8080

