name: Build, Push to ECR, and Deploy to EKS with Quarkus

on:
  pull_request:
    branches:
      - master
jobs:
  commit-stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile the code
        run: mvn compile

      - name: Run unit tests
        run: mvn test

      - name: Run PMD analysis
        run: mvn pmd:check

  build-push-deploy:
    needs: commit-stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      #      - name: Update Application Version
      #        run: mvn versions:set -DnewVersion=${{ github.sha }}-SNAPSHOT

      - name: Build and Push Native Image to Amazon ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ./mvnw clean package -Dquarkus.container-image.tag=${IMAGE_TAG}
          ls -l target/kubernetes/ # Depurar: listar archivos para verificar

      - name: Configure kubectl for EKS
        run: |
          aws eks update-kubeconfig --name quarkus --region ${{ secrets.AWS_REGION }}

      - name: Apply Kubernetes Configuration
        run: |
          cp target/kubernetes/kubernetes.yml target/kubernetes/kubernetes-deploy.yml
          kubectl apply -f target/kubernetes/kubernetes-deploy.yml
      #- name: Prepare Kubernetes Deployment Files
      #  run: |
      #    bash prepare-k8s-files.sh

      # Configurar kubectl para EKS
      - name: Configure kubectl for EKS
        run: |
            aws eks update-kubeconfig --name quarkus --region ${{ secrets.AWS_REGION }}
            kubectl apply -f target/kubernetes/kubernetes.yml
      # Despliegue en EKS
      #- name: Deploy to EKS
      #  run: |
      #    ls -la
      #    ./prepare-k8s-files.sh
      #    ./deploy-green-loadbalancer.sh

  blue-green:
    needs: smoke-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Configure kubectl for EKS
        run: aws eks update-kubeconfig --name quarkus --region ${{ secrets.AWS_REGION }}

      - name: Blue Green Deployment
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          BASE_DIR="target/kubernetes/"
          ORIGINAL_FILE="${BASE_DIR}kubernetes.yml"
          BLUE_FILE="${BASE_DIR}kubernetes-blue.yml"
          GREEN_FILE="${BASE_DIR}kubernetes-green.yml"   
          cp "$ORIGINAL_FILE" "$BLUE_FILE"
          cp "$ORIGINAL_FILE" "$GREEN_FILE"
          sed -i "s|quarkus-hello-world|quarkus-hello-world-blue|g" "$BLUE_FILE"
          sed -i "s|quarkus-hello-world|quarkus-hello-world-green|g" "$GREEN_FILE"
          sed -i "s|116858595749.dkr.ecr.eu-west-1.amazonaws.com/quarkus:latest|116858595749.dkr.ecr.eu-west-1.amazonaws.com/quarkus:${IMAGE_TAG}|g" "$BLUE_FILE"
          sed -i "s|116858595749.dkr.ecr.eu-west-1.amazonaws.com/quarkus:latest|116858595749.dkr.ecr.eu-west-1.amazonaws.com/quarkus:${IMAGE_TAG}|g" "$GREEN_FILE"
          kubectl apply -f "$GREEN_FILE"
          echo "Despliegue 'green' aplicado con la imagen: 116858595749.dkr.ecr.eu-west-1.amazonaws.com/quarkus:${IMAGE_TAG}"
          kubectl patch svc quarkus-hello-world-service -p '{"spec":{"selector":{"app.kubernetes.io/name":"quarkus-hello-world-green", "app.kubernetes.io/version":"green"}}}'

  integration-test:
    needs: build-push-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Integration Test
        run: |
          echo "Testing the deployed application"
          response=$(curl -s http://aeaf7296a50444e25b82e4145761ef25-13049291.eu-west-1.elb.amazonaws.com/hello)
          echo "Response from application: $response"
          [[ "$response" == *"Hello World V2"* ]] || exit 1

  smoke-test:
    needs: integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Integration Test
        run: |
          echo "Testing the deployed application"
          response=$(curl -s http://aeaf7296a50444e25b82e4145761ef25-13049291.eu-west-1.elb.amazonaws.com/hello)
          echo "Response from application: $response"
          [[ "$response" == *"Hello World V2"* ]] || exit 1